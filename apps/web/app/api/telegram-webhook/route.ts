import { NextRequest, NextResponse } from 'next/server';

// –ü—Ä–æ—Å—Ç–æ–π webhook –¥–ª—è Telegram –±–æ—Ç–∞
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (body.message && body.message.text) {
      const chatId = body.message.chat.id;
      const text = body.message.text;
      const firstName = body.message.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      
      console.log(`üì± –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${firstName} (${chatId}): ${text}`);
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª /start
      if (text.startsWith('/start')) {
        const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!

üîê <b>DataTrace OTP Bot</b>

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å –∫–æ–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ DataTrace.

üìã <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1Ô∏è‚É£ –ù–∞ —Å–∞–π—Ç–µ –Ω–∞–∂–∏–º–∞–µ—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –≤ Telegram"
2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ—Ç–µ –∫–æ–¥ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
3Ô∏è‚É£ –í–≤–æ–¥–∏—Ç–µ –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ

‚ö° –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∫–æ–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await sendTelegramMessage(chatId, welcomeMessage);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å chat_id —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º)
        console.log(`üíæ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è: ${chatId} (${firstName})`);
      }
    }
    
    return NextResponse.json({ ok: true });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ webhook:', error);
    return NextResponse.json({ error: 'Webhook error' }, { status: 500 });
  }
}

async function sendTelegramMessage(chatId: string | number, message: string) {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  if (!botToken) return;
  
  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });
    
    const result = await response.json();
    console.log('üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result.ok);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
  }
}