#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ DataTrace
const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ DataTrace...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
console.log('üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:');
const requiredDirs = [
  'apps/api',
  'apps/web',
  'apps/api/src',
  'apps/web/app'
];

requiredDirs.forEach(dir => {
  if (fs.existsSync(dir)) {
    console.log(`‚úÖ ${dir}`);
  } else {
    console.log(`‚ùå ${dir} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\nüìÑ –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
const configFiles = [
  'apps/api/package.json',
  'apps/web/package.json',
  'apps/api/src/index.js',
  'apps/web/lib/api.ts',
  'apps/api/supabase_setup.sql'
];

configFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è API
console.log('\nüîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è API:');
const apiEnvFile = 'apps/api/.env';
if (fs.existsSync(apiEnvFile)) {
  console.log(`‚úÖ ${apiEnvFile} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
  const envContent = fs.readFileSync(apiEnvFile, 'utf8');
  
  const requiredApiVars = [
    'SUPABASE_URL',
    'SUPABASE_ANON_KEY',
    'SUPABASE_SERVICE_ROLE_KEY'
  ];
  
  requiredApiVars.forEach(varName => {
    if (envContent.includes(varName)) {
      console.log(`‚úÖ ${varName} - –Ω–∞–π–¥–µ–Ω`);
    } else {
      console.log(`‚ùå ${varName} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    }
  });
} else {
  console.log(`‚ùå ${apiEnvFile} - —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Web
console.log('\nüåê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Web:');
const webEnvFile = 'apps/web/.env.local';
if (fs.existsSync(webEnvFile)) {
  console.log(`‚úÖ ${webEnvFile} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
  const envContent = fs.readFileSync(webEnvFile, 'utf8');
  
  if (envContent.includes('NEXT_PUBLIC_API_URL')) {
    console.log(`‚úÖ NEXT_PUBLIC_API_URL - –Ω–∞–π–¥–µ–Ω`);
  } else {
    console.log(`‚ùå NEXT_PUBLIC_API_URL - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
  }
} else {
  console.log(`‚ùå ${webEnvFile} - —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª:`);
  console.log(`   echo "NEXT_PUBLIC_API_URL=http://localhost:3000" > ${webEnvFile}`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
console.log('\nüì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:');
const packageFiles = [
  'apps/api/package.json',
  'apps/web/package.json'
];

packageFiles.forEach(file => {
  if (fs.existsSync(file)) {
    const pkg = JSON.parse(fs.readFileSync(file, 'utf8'));
    const nodeModulesDir = path.join(path.dirname(file), 'node_modules');
    
    if (fs.existsSync(nodeModulesDir)) {
      console.log(`‚úÖ ${path.dirname(file)} - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã`);
    } else {
      console.log(`‚ùå ${path.dirname(file)} - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: cd ${path.dirname(file)} && npm install`);
    }
  }
});

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è 404:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: cd apps/api && npm start');
console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Web —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: cd apps/web && npm run dev');
console.log('3. –°–æ–∑–¥–∞–π—Ç–µ apps/web/.env.local —Å NEXT_PUBLIC_API_URL=http://localhost:3000');
console.log('4. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/api-test –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');

console.log('\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:');
console.log('- DEBUG_404_STEPS.md - –ø–æ—à–∞–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
console.log('- RAILWAY_404_FIX.md - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è Railway');
console.log('- SETUP_GUIDE.md - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ');

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');